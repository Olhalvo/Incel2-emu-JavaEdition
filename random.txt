LDI R1 $0b00010000
LDI R7 $48
[start]  ADI R1 $-1
MST R1
ADI R7 $1
ADD R0 R0 R1
BRC F1 V0 $[start]
JMP P=0 $[new_start]
>1
// starting pointer and limit
[new_start] LDI R7 $48
LDI R6 $63
LDI R5 $48
// fetching the 2 values
[loop] MLD R1
ADI R7 $1
MLD R2
// comparing
SUB R0 R2 R1
BRC F2 V1 $[end_check]
ADI R7 $-1
MST R2
ADI R7 $1
MST R1
// checking if we've reached the end of the sort
[end_check] SUB R0 R6 R5
BRC F1 V1 $[end]
// checking if we've reached the end of the cycle
SUB R0 R7 R6
BRC F1 V0 $[loop]
>2
LDI R7 $48
ADI R6 $-1
JMP P=0 $[loop]
[end] HLT